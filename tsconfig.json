{
  "compilerOptions": {
    // куда происходит сборка, но нам это не важно т.к. мы собираем веб паком
    //"outDir": "./dist/",
    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь, что в подобных ситуациях разработчик должен явно писать any
    "noImplicitAny": true,
    // модульная система
    "module": "ESNext",
    // версия стандарта в который код будет компилироваться
    "target": "es5",
    // конструкции jsx
    "jsx": "react-jsx",
    // позволяет компилятору обрабатывать не только ts файлы, но и js
    "allowJs": true,
    // 99% случаев тут Node
    "moduleResolution": "node",
    // Для абсолютного импорта
    "baseUrl": ".",
    "paths": {
      "*": ["./src/*"]
    },
    // esModuleInterop позволяет работать с пакетами, которые используют
    // common js как с обычными пакетами с помощью import require() module.export
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет default import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их
    // вместо такого импорта import * as React from 'react'
    // можно писать такой import React from 'react'
    "allowSyntheticDefaultImports": true,
    "strictNullChecks": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "./setupTests.ts",
    "./src/**/*.ts",
    "./src/**/*.tsx"
  ]
}